// Sprint 1, entrega 1, nivell 1
var today = new Date(); // "2021-07-22"
var dd = today.getDate();
var mm = today.getMonth() + 1; //remember the 0 index
var yyyy = today.getFullYear();

if (dd <10) {
  dd = "0" + dd;
}
  
if (mm <10) {
  mm = "0" + mm;
}

today = dd + "/" + mm + "/" + yyyy
console.log(today);

// entrega 1, nivell 1
var name = "KMJ";
var age = "old enough";
var hairColor = "purple";
var person = [ name, age, hairColor ]

function printName() { 
  var name = person[0];
  return console.log(name)
}
printName();

// entrega 1, nivell 2, ex. 1: Imprimir el nom i cognoms de l'usuari en variables mitjançant template literals, creant les variables i referenciant en la impressió de l'missatge

var firstName = `Mike` 
var lastName = `Wazowski`

console.log(firstName + " " + lastName)

// entrega 1, nivell 2, ex. 2: Invocar la funció mitjançant template literals
// Omar: En el N2 E2 tienes que crear una función que devuelva un valor y ejecutar esa función dentro de un template literal (en un console.log)
// KMJ: thank you. the instructions don't say any of that *eye roll*
var firstName = `Mike` 
var lastName = `Wazowski`
var greeting = `Hello, ${firstName} ${lastName}! How's it going?`

function printGreeting() {
   return greeting
}
console.log(`${printGreeting()}`);

// entrega 1, nivell 3, ex. 1: Crea una matriu de deu funcions i empleni-la mitjançant un bucle. Cada funció comptarà del 0-9 imprimint-ho per pantalla. Invoqui cada funció de l'array iterativament. Haurà d'imprimir-se per pantalla el compte de 0-9 deu vegades
// Omar: El N3 E1 está CASI bien. Al hacer forEach(say) lo que haces es ejecutar la función say por cada elemento del array. Lo que hay que hacer es un bucle que coja cada elemento del array y lo ejecute (añadiéndole "()" al final)
const pirates = []
var say = function walkThePlank(i) {
   for (var i = 0; i < 10; i++) {
      console.log(i);
   }
}

for (var i = 0; i < 10; i++) {
   pirates.push(say);
}

for (i = 0; i < pirates.length; i++) {
  pirates[i]();
}


/* 
Omar, te dejo este ejemplo de mi frustración un día, en modo de pregunta... ¿cómo se consigue imprimir a la consola desde dentro de una función? (Please excuse/enjoy the language.)
// WHY the fuck can't I figure out how to print to console from inside a GD function?!
function fuckingPrint() {
  var firstName = `WTF`,
  lastName = `whyDamnit`,
  greeting = `Hello, ${firstName} ${lastName}! How's it going?`
  return this.greeting 
console.log(fuckingPrint.greeting)
}
console.log(fuckingPrint.greeting)
----------------------------------------------
*/

// Sprint 1, entrega 2 (Classes & Arrow Functions)
// entrega 2, nivell 1: Utilitza l'intèrpret de node en tots els casos!!!), nivell 1: Imprimir per pantalla el resultat d'una arrow function autoinvocable que sumi dos nombres.
// KMJ: NodeJS! create a Self-Executing Anonymous Function (aka IIFE: Immediately Invoked Function Expression), that adds two numbers; make it an arrow function

( function () {
   var Add = (num1, num2) => {
     return (num1 + num2);
   }
   return console.log(Add(37, 37))
  }) ();

